package com.company;
import javax.swing.*;
import java.util.Scanner;
public class Mass10 {
    public static void main(String[] args) throws Exception {
        Scanner in = new Scanner(System.in);

//        Зад 1) Array17. Дан массив A размера N. Вывести его элементы в следующем порядке:
//          A1, A2, AN, AN–1, A3, A4, AN–2, AN–3, ... .
//        int n = 11;
//        int[] a = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
//        int aa = a.length, s = 0;
//        for (int i = 0; aa > 0; aa -= 4 ){
//            System.out.print(a[s] + ", " + a[s + 1] + ", " + a[n] + ", " + a[n - 1] + ", ");
//            s += 2;
//            n -= 2;
//        }

//==============================================================================================================
//
//        Зад 2) Array16. Дан массив A размера N. Вывести его элементы в следующем порядке:
//          A1, AN, A2, AN–1, A3, AN–2, ... .
//        int n = 12;
//        int[] a = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12};
//        int aa = a.length, s = 0;
//        n --;
//        for (int i = 0; aa > 0; aa -= 2 ){
//            System.out.print(a[s] + ", "  + a[n] + ", ");
//            s += 1;
//            n -= 1;
//        }

//===================================================================================================

//        Зад 3)  Array1. Дано целое число N (> 0). Сформировать и вывести целочисленный
//          массив размера N, содержащий N первых положительных нечетных чисел:
//          1,3,5, ... .

//        int n = in.nextInt();
//        int [] a = new int[n];
//        for(int i = 0; n > i; i ++ ){
//            a [i] = (i * 2) + 1;
//        }
//        for(int i = 0; i < a.length; i++){
//            System.out.print(a [i] + ", ");
//        }

//    ===============================================================================================

//        зaд 4) Array15.Дан массив A размера N. Вывести вначале его элементы с нечетными
//        номерами в порядке возрастания номеров, а затем — элементы с четными
//        номерами в порядке убывания номеров.
//                A1, A3, A5, ..., A6, A4, A2.

//        int n = in.nextInt();
//        int [] a = new int[n];
//        for(int i = 0; n > i; i ++ ){
//            a [i] = (i * 2) + 1;
//            System.out.print(a [i] + ", ");
//        }
//        for(int i = 0; n > i; i ++ ) {
//            a[i] = (i + 1) * 2;
//            System.out.print(a[i]);
//        }

//================================================================================================================

//        зaд 5) Array2. Дано целое число N (> 0). Сформировать и вывести целочисленный
//      массив размера N, содержащий степени двойки от первой до N-й: 2, 4, 8,
//      16, ... .

//        int n = in.nextInt();
//        int [] a = new int[n];
//        for(int i = 0; n > i; i ++ ){
//            a [i] = (int) Math.pow(2, i + 1);
//        }
//        for(int i = 0; i < a.length; i++){
//            System.out.print(a [i] + ", ");
//        }
//=======================================================================================

//        зaд 6) Array3. Дано целое число N (> 1), а также первый член A и разность D арифме-
//      тической прогрессии. Сформировать и вывести массив размера N, содер-
//      жащий N первых членов данной прогрессии:
//      A, A + D, A + 2·D, A + 3·D, ... .

//        int n = in.nextInt();
//        int A = in.nextInt(), D = in.nextInt();
//        int [] a = new int[n];
//        a[0] = A;
//        for(int i = 1; n > i; i++){
//            a[i] = a[0] + (i * D);
//            System.out.println(a[i]);
//        }

//=====================================================================================

//        зaд 7) Array4. Дано целое число N (> 1), а также первый член A и знаменатель Q гео-
//      метрической прогрессии. Сформировать и вывести массив размера N, со-
//          держащий N первых членов данной прогрессии:
//          A, A·D, A·D2, A·D3

//        int n = in.nextInt();
//        int A = in.nextInt(), D = in.nextInt();
//        int [] a = new int[n];
//        a[0] = A;
//        for(int i = 1; n > i; i++){
//            a[i] = a[0] * (int) Math.pow(D, i);
//        }
//        for (int i = 0; n > i; i++){
//            System.out.println(a[i]);
//        }

//=====================================================================================

//        зaд 8) Array7o. Дан массив размера N. Вывести его элементы в обратном порядке.
//        int n = in.nextInt();
//        int [] a = new int[n];
//        int [] b = new int[n];
//        for(int i = 0; i < a.length; i++) {
//            a[i] = (int) (Math.random() * 100) + 5;
//            System.out.print(a[i] + ", ");
//        }
//        System.out.println();
//        for(int i = 0; n > i; i++){
//            b[i] = a[n - i - 1];
//            System.out.print(b[i] + ", ");
//        }
//=====================================================================================

//        зaд 9) Array8. Дан целочисленный массив размера N. Вывести все содержащиеся в
//      данном массиве нечетные числа в порядке возрастания их индексов, а так-
//      же их количество K.
//        printf("a[%i] : ",i);
//        scanf("%i",&a[i]);
//        int n = in.nextInt();
//        int [] a = new int[n];
//        int k = 0;
//        for(int i = 0; n > i; i ++){
//            System.out.printf("a[%d] : ", i);
//            a[i] = in.nextInt();
//        }
//        for(int i = 0; n> i; i ++){
//            if (a[i] % 2 != 0){
//                System.out.print(a[i] + "  ");
//                k++;
//            }
//        }
//        System.out.println();
//        System.out.println(k);


    }
}
